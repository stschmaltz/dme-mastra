/**
 * Build full loot tables from the SRD JSON dumps.
 * Run:  node data-parser-script.js
 */
import fs from "node:fs/promises";
import path from "node:path";
import { fileURLToPath } from "node:url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const BASE = __dirname; // Use the script's own directory as the base

/* --- helper: 'is this light/cosmetic enough?' --------------------------- */
function isFlavourGear(e) {
  if (e.equipment_category.name !== "Adventuring Gear") return false;
  const gc = e.gear_category?.name ?? "";
  return [
    "Standard Gear",
    "Arcane Foci",
    "Druidic Foci",
    "Holy Symbols",
  ].includes(gc);
}

async function main() {
  try {
    const equipment = JSON.parse(
      await fs.readFile(path.join(BASE, "5e-SRD-Equipment.json"), "utf8"),
    );

    const magic = JSON.parse(
      await fs.readFile(path.join(BASE, "5e-SRD-Magic-Items.json"), "utf8"),
    );

    /* --- cosmetics / curios ---------------------------------------------- */
    const cosmetics = equipment
      .filter(isFlavourGear)
      .map((e) => e.name) // keep the whole batch
      .sort((a, b) => a.localeCompare(b));

    /* --- every potion in the SRD dump ------------------------------------ */
    const potions = magic
      .filter((m) => m.name.startsWith("Potion"))
      .map((m) => ({ name: m.name, rarity: m.rarity.name }));

    /* --- trinkets: still manual for now ---------------------------------- */
    const trinkets = [
      "Tiny silver compass that never points north",
      "Cracked monocle that flashes when lies are spoken",
      "Wooden die with only sevens",
      "Vial of sand that refills at dawn",
      "Pressed blue rose between glass plates",
    ];

    const outputPath = path.resolve("./lootTables.ts");
    console.log(`Attempting to write lootTables.ts to: ${outputPath}`);

    await fs.writeFile(
      outputPath,
      `/* Auto‑generated by build‑loot‑tables.ts — do not edit */
export const cosmetics = ${JSON.stringify(cosmetics, null, 2)};
export const potions   = ${JSON.stringify(potions, null, 2)};
export const trinkets  = ${JSON.stringify(trinkets, null, 2)};
`,
    );
    console.log(
      `✅ lootTables.ts written · cosmetics:${cosmetics.length} · potions:${potions.length}`,
    );
  } catch (error) {
    console.error("Error in main function:", error);
    if (error instanceof Error && error.stack) {
      console.error(error.stack);
    }
    throw error;
  }
}

main().catch((err) => {
  console.error("Unhandled error in main execution:", err);
  if (err instanceof Error && err.stack) {
    console.error(err.stack);
  }
  throw err;
});
